import{_ as s,c as e,o as n,a0 as r}from"./chunks/framework.DWF-bbW5.js";const o="/gaius-blog/assets/sql.BCG-a3Sk.png",l="/gaius-blog/assets/php-start.C7E5UMs2.png",t="/gaius-blog/assets/php.D76CNT72.png",i="/gaius-blog/assets/nginx.D_GKpDGx.png",p="/gaius-blog/assets/node.fGBsBXZR.png",d="/gaius-blog/assets/node-start.P2UDhezG.png",g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"project/opex/index.md","filePath":"project/opex/index.md"}'),c={name:"project/opex/index.md"};function h(q,a,m,u,_,b){return n(),e("div",null,a[0]||(a[0]=[r('<h2 id="云服务器部署" tabindex="-1">云服务器部署 <a class="header-anchor" href="#云服务器部署" aria-label="Permalink to &quot;云服务器部署&quot;">​</a></h2><h3 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h3><p>作为一个前端，对于服务器的事情不是特别清楚，推荐使用<code>宝塔面板</code><a href="https://www.bt.cn/new/index.html" target="_blank" rel="noreferrer">官方安装地址</a> 宝塔面板安装完成后： 1. 安装对应的开发软件（如：mysql，nginx等） 2. 配置mysql数据库 3. 宝塔面板<code>安全</code>添加对应的端口 4. 云服务器白名单添加对应的端口 5. 准备好前端打包文件<code>dist</code>文件夹，<code>server</code>后端Nest服务文件</p><h3 id="上传" tabindex="-1">上传 <a class="header-anchor" href="#上传" aria-label="Permalink to &quot;上传&quot;">​</a></h3><p>将<code>dist</code>文件夹内容和<code>server</code>文件夹上传至云服务器</p><h3 id="开始部署项目" tabindex="-1">开始部署项目 <a class="header-anchor" href="#开始部署项目" aria-label="Permalink to &quot;开始部署项目&quot;">​</a></h3><h4 id="导入数据库" tabindex="-1">导入数据库 <a class="header-anchor" href="#导入数据库" aria-label="Permalink to &quot;导入数据库&quot;">​</a></h4><h5 id="_1-创建mysql数据库" tabindex="-1">1. 创建mysql数据库 <a class="header-anchor" href="#_1-创建mysql数据库" aria-label="Permalink to &quot;1. 创建mysql数据库&quot;">​</a></h5><h5 id="_2-上传项目中的sql文件夹中的sql" tabindex="-1">2. 上传项目中的<code>sql</code>文件夹中的sql <a class="header-anchor" href="#_2-上传项目中的sql文件夹中的sql" aria-label="Permalink to &quot;2. 上传项目中的`sql`文件夹中的sql&quot;">​</a></h5><h5 id="_3-导入sql" tabindex="-1">3. 导入sql <a class="header-anchor" href="#_3-导入sql" aria-label="Permalink to &quot;3. 导入sql&quot;">​</a></h5><p><img src="'+o+'" alt="sql.png"></p><h4 id="添加站点" tabindex="-1">添加站点 <a class="header-anchor" href="#添加站点" aria-label="Permalink to &quot;添加站点&quot;">​</a></h4><h5 id="_1-选择网站目录" tabindex="-1">1. 选择<code>网站</code>目录 <a class="header-anchor" href="#_1-选择网站目录" aria-label="Permalink to &quot;1. 选择`网站`目录&quot;">​</a></h5><h5 id="_2-添加站点" tabindex="-1">2. 添加站点 <a class="header-anchor" href="#_2-添加站点" aria-label="Permalink to &quot;2. 添加站点&quot;">​</a></h5><p><img src="'+l+'" alt="php"></p><h5 id="_3-填写配置-选择上传的dist目录" tabindex="-1">3. 填写配置(选择上传的<code>dist</code>目录) <a class="header-anchor" href="#_3-填写配置-选择上传的dist目录" aria-label="Permalink to &quot;3. 填写配置(选择上传的`dist`目录)&quot;">​</a></h5><p><img src="'+t+'" alt="php"></p><h5 id="_4-配置nginx代理" tabindex="-1">4. 配置nginx代理 <a class="header-anchor" href="#_4-配置nginx代理" aria-label="Permalink to &quot;4. 配置nginx代理&quot;">​</a></h5><p><img src="'+i+`" alt="nginx"> 下面是我使用的nginx配置，可以根据你自己的项目调整。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> #----------------开始--------------------</span></span>
<span class="line"><span>   # 支持历史模式的路由</span></span>
<span class="line"><span>   location / {</span></span>
<span class="line"><span>       try_files $uri $uri/ /index.html;</span></span>
<span class="line"><span>       real_ip_header    X-Forwarded-For; # 设置用于真实 IP 地址的头部字段</span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span>   #禁止访问的文件或目录</span></span>
<span class="line"><span>   location ~ ^/(\\.user.ini|\\.htaccess|\\.git|\\.env|\\.svn|\\.project|LICENSE|README.md)</span></span>
<span class="line"><span>   {</span></span>
<span class="line"><span>       return 404;</span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span>   location /prod/ {</span></span>
<span class="line"><span>     rewrite /prod/(.*) /$1 break;</span></span>
<span class="line"><span>     proxy_pass http://120.26.161.36:8899;</span></span>
<span class="line"><span>     proxy_set_header Host $host;</span></span>
<span class="line"><span>     proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span>   #-------------结束---------------------</span></span></code></pre></div><h4 id="添加node项目" tabindex="-1">添加Node项目 <a class="header-anchor" href="#添加node项目" aria-label="Permalink to &quot;添加Node项目&quot;">​</a></h4><h5 id="_1-添加node项目" tabindex="-1">1. 添加Node项目 <a class="header-anchor" href="#_1-添加node项目" aria-label="Permalink to &quot;1. 添加Node项目&quot;">​</a></h5><h5 id="" tabindex="-1"><img src="`+p+'" alt="node"> <a class="header-anchor" href="#" aria-label="Permalink to &quot;![node](../../assets/images/opex/node.png)&quot;">​</a></h5><h5 id="_2-修改server-src-config-prod-yml中的mysql配置" tabindex="-1">2. 修改<code>server/src/config/prod.yml</code>中的mysql配置 <a class="header-anchor" href="#_2-修改server-src-config-prod-yml中的mysql配置" aria-label="Permalink to &quot;2. 修改`server/src/config/prod.yml`中的mysql配置&quot;">​</a></h5><h5 id="_3-填写配置" tabindex="-1">3. 填写配置 <a class="header-anchor" href="#_3-填写配置" aria-label="Permalink to &quot;3. 填写配置&quot;">​</a></h5><p><img src="'+d+'" alt="node"></p><h5 id="_4-一键安装模块" tabindex="-1">4. 一键安装模块 <a class="header-anchor" href="#_4-一键安装模块" aria-label="Permalink to &quot;4. 一键安装模块&quot;">​</a></h5><h5 id="_5-启动项目" tabindex="-1">5. 启动项目 <a class="header-anchor" href="#_5-启动项目" aria-label="Permalink to &quot;5. 启动项目&quot;">​</a></h5><h4 id="部署完成" tabindex="-1">部署完成 <a class="header-anchor" href="#部署完成" aria-label="Permalink to &quot;部署完成&quot;">​</a></h4><p>安装上述步骤，完成部署后，访问对应的前端页面。</p>',30)]))}const f=s(c,[["render",h]]);export{g as __pageData,f as default};
